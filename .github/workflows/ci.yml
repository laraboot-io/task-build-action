name: Build and Test

on:
  push:
    branches:
      - main
      - dev
      - ci

jobs:
  integration:
    name: Build Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app:
          - noops-task
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}
      - name: Get Pack
        run: |
          (curl -sSL "https://github.com/buildpacks/pack/releases/download/v0.17.0/pack-v0.17.0-linux.tgz" | sudo tar -C /usr/local/bin/ --no-same-owner -xzv pack)
          sudo wget https://github.com/mikefarah/yq/releases/download/v4.2.0/yq_linux_amd64 -O /usr/bin/yq
          sudo chmod +x /usr/bin/yq
      - uses: actions/setup-go@v2
        with:
          go-version: '^1.16'
      - run: |
          echo "Using task-builder (docker)"
          export USER_ID=$(id -u)
          export GROUP_ID=$(id -g)
          export CURRENT_UID=$USER_ID:$GROUP_ID
          docker build -t task-builder .
          pack config default-builder paketobuildpacks/builder:full
          root_path=$(pwd)
          pushd examples
            for d in */ ; do
              if [ -d "$d" ]; then
                pushd $d
                echo "$d"
                readonly yml_task=$(yq eval -j -I=0 ./task.yml)
                readonly task_name=$(echo $yml_task | jq -rc '.name')
                if [ ! -f ".git/config" ]; then
                  git init
                  git config --global user.email "test@example.com"
                  git config --global user.name "task-builder"
                fi
                docker run \
                  -e BUILDER_WORKBENCH=/github/workspace \
                  -v "/var/run/docker.sock":"/var/run/docker.sock" \
                  -v `pwd`:/github/workspace \
                  -i task-builder \
                  arg0 .
                  docker images
                  pack inspect-buildpack $task_name
                  pack build check-app \
                  --path . \
                  --buildpack gcr.io/paketo-buildpacks/php-dist \
                  --buildpack docker://$task_name \
                  --clear-cache --verbose
                  # clean up
                  sudo rm -rf dist
                popd
              fi
            done
          popd
  test_action:
    name: Test Github Action
    runs-on: ubuntu-latest
    needs:
      - integration
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Prep work
        run: |
          export BUILDER_WORKBENCH=/github/workspace
      - name: Setup build tools
        id: build-actions
        uses: ./ # Uses an action
        with:
          arg0: 'arg0'
          directory: ./examples/noops-task
      - name: Yq
        run: |
          sudo wget -4 https://github.com/mikefarah/yq/releases/download/v4.2.0/yq_linux_amd64 -O /usr/bin/yq
          sudo chmod +x /usr/bin/yq
      - name: Test the task
        run: |
          readonly yml_task=$(yq eval -j -I=0 ./examples/noops-task/task.yml)
          readonly task_name=$(echo $yml_task | jq -rc '.name')
          (curl -sSL "https://github.com/buildpacks/pack/releases/download/v0.17.0/pack-v0.17.0-linux.tgz" | sudo tar -C /usr/local/bin/ --no-same-owner -xzv pack)
          pack config default-builder paketobuildpacks/builder:full
          pack build check-app \
          --path ./examples/noops-task \
          --buildpack gcr.io/paketo-buildpacks/php-dist \
          --buildpack docker://$task_name \
          --clear-cache --verbose

  release:
    name: Release
    runs-on: ubuntu-latest
    needs:
      - test_action
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.RELEASE_TOKEN }}
      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: true
          title: "Development Build"
          files: |
            Dockerfile
            entrypoint.sh
            README.md
            action.yml
      - name: Release into GH Rc
        id: ghcr-io-release
        env:
          ECR_REGISTRY: ghcr.io/laraboot-io
        run: |
          sudo chmod +x ./scripts/release-docker-task.sh
          ./scripts/release-docker-task.sh